# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test .NET Web App

on:
  pull_request:
    branches:
      - "**"

permissions:
  pull-requests: write
  contents: read

jobs:
  build_test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: ["8.0.x"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        working-directory: ./backend/src/
        run: dotnet restore PruneUrl.Backend.sln

      - name: Build
        working-directory: ./backend/src/
        run: dotnet build --configuration Release --no-restore PruneUrl.Backend.sln

      - name: Run tests
        working-directory: ./backend/src/
        run: dotnet test --configuration Release --no-build --settings .runsettings --verbosity normal --collect:"XPlat Code Coverage" --results-directory ../coverage PruneUrl.Backend.sln

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.5
        with:
          reports: backend/coverage/**/coverage.cobertura.xml
          targetdir: backend/coverage/report
          reporttypes: Cobertura

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: backend/coverage/report/Cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "50 70"

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && (success() || failure())
        with:
          recreate: true
          path: code-coverage-results.md
